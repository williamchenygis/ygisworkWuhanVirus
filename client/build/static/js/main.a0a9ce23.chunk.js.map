{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","squares","this","state","slice","calculateWinner","xIsNext","setState","renderSquare","React","Component","Game","getList","that","fetch","then","res","json","console","log","msg","getUserInfo","history","Array","fill","stepNumber","username","length","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0a9ce23.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// class Square extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       value: props.value,\n//     };\n//   }\n\n//   render() {\n//     return (\n//       <button className=\"square\"\n//         onClick={() => this.props.onClick()}\n//       >\n//         {this.props.value}\n//       </button>\n//     );\n//   }\n// }\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     squares: Array(9).fill(null),\n  //     xIsNext: true,\n  //   };\n\n  //   // this.state.squares=[\n  //   //   'O', null, 'X',\n  //   //   'X', 'X', 'O',\n  //   //   'O', null, null,\n  //   // ];\n  // }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    \n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  renderSquare(i) {\n    return <Square \n      value={this.props.squares[i]} \n      onClick={()=>this.props.onClick(i)}\n    />;\n  }\n\n  render() {\n    //const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\n    // const winner = calculateWinner(this.state.squares);\n    // let status;\n    // if (winner) {\n    //   status = 'Winner: ' + winner;\n    // } else {\n    //   status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    // }\n\n    //<div className=\"status\">{status}</div>\n\n    return (\n      <div>\n        \n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      xIsNext: true,\n      stepNumber:0,\n      msg:null,\n      username:null,\n    };\n\n    this.getList();\n    this.getUserInfo();\n  }\n\n  // Retrieves the list of items from the Express app\n  getList = () => {\n    var that=this;\n    fetch('/api/test')\n    .then(res => res.json())\n    .then(function(res){\n      console.log(res);\n      that.setState({msg:res.msg});\n    })\n  }\n\n  getUserInfo = () => {\n    var that=this;\n    fetch('/api/getUserInfo')\n    .then(res => res.json())\n    .then(function(res){\n      console.log(res);\n      //that.setState({username:res.msg});\n    })\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const msg=this.state.msg;\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"msg\">\n          <h3>welcome: {msg}</h3>\n        </div>\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}